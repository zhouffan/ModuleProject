//plugins {
//    id 'com.android.library'
//    id 'kotlin-android'
//}
// 1、取出isRelease字段
def appId = rootProject.ext.appId
def application = rootProject.ext.application
def appVersion = rootProject.ext.appVersion
def dependenciesImport = rootProject.ext.dependenciesImport
def isRelease = rootProject.ext.isRelease

// 2、根据isRelease字段，来确定当前是集成化 还是组件化
if (isRelease) {
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}
apply plugin: 'kotlin-android'


android {
    compileSdkVersion application.compileSdkVersion
    buildToolsVersion application.buildToolsVersion

    defaultConfig {
        // 3、如果当前是组件化，那么就需要 applicationId
        if (!isRelease) {
            applicationId appId.user
        }
        minSdkVersion application.minSdkVersion
        targetSdkVersion application.targetSdkVersion
        versionCode appVersion.versionCode
        versionName appVersion.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    dependenciesImport.each { k, v -> implementation(v) }

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}